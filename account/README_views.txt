def user_login(request):

Вот что делает ,базовый log-in view: когда представление 
user_login вызывается с запросом GET, мы создаем новую log-in 
форму с form = LoginForm(), чтобы отобразить его в шаблоне. 
Когда пользователь отправляет форму с помощью POST, мы выполняем 
следующие действия:

Создается экземпляр формы с отправленными данными с помощью 
form = LoginForm(request.POST) .
Проверяется валидность формы. Если форма невалидна, то в шаблоне 
отображаются ошибки формы (например, если пользователь не 
заполнил одно из полей).
Если отправленные данные являются валидными, мы ищем 
пользователя в базе данных с помощью метода authenticate(). 
Этот метод принимает username и password и возвращает объект 
User. Если пользователь не прошел аутентификацию, возвращается 
необработанный HttpResponse, отображающийся на экране.
Если пользователь успешно прошел аутентификацию, мы проверяем, 
активен ли он с помощью атрибуту is_active. Если пользователь 
не активен, возвращается HttpResponse, отображающийся на экране.
Если пользователь активен, он входит на сайт. Мы установлмваем 
сессию, вызвав метод login() и возвращаем сообщение об успешном 
выполнении.
Обратите внимание на разницу между authenticate и login: 
authenticate() проверяет учетные данные пользователя и 
возвращает user объект в случае успеха; login() задает 
пользователя в текущей сессии.



@login_required

Декоратор login_required проверяет, прошел ли текущий пользователь 
аутентификацию. Если пользователь прошел аутентификацию, 
рпедставление выполнится; Если пользователь не прошел 
аутентификацию, он будет перенаправлян на страницу входа.

Мы также определили переменную section. Мы собираемся 
использовать эту переменную для отслеживания того раздела сайта, 
за которым наблюдает пользователь.

Теперь необходимо создать шаблон для представления панели 
мониторинга. Создайте новый файл внутри шаблонов/учетной 
templates/account/ и назовите его dashboard.html


def register:

Представление для создания учетных записей пользователей 
является довольно простым. Вместо сохранения необработанного 
пароля, введенного пользователем, мы используем метод 
set_password() модели User, обрабатывающей шифрование для 
сохранения безопасности.

Теперь отредактируйте файл urls.py приложения account и 
вставьте следующий url-шаблон