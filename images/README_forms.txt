ImageCreateForm

Мы позволим пользователям использовать bookmark images с 
внешних веб-сайтов. Пользователь предоставит URL-адрес 
изображения, заголовок и дополнительное описание. Приложение 
загрузит изображение и создаст новый объект Image в базе данных.

Как видно, эта форма является ModelForm, построенной из модели 
Image, включающей только поля title, url и description. Наши 
пользователи не будут вводить URL-адрес изображения
непосредственно в форме. Вместо этого они будут использовать 
средства JavaScript для выбора изображения на внешнем сайте, 
и наша форма будет получать URL-адрес в качестве параметра.
Мы переопределяем виджет по умолчанию в поле «URL-адрес», чтобы 
использовать графический элемент HiddenInput. Этот графический 
элемент визуализируется как элемент<input> с атрибутом 
type="hidden". Мы это делаем, поскольку мы не хотим, 
чтобы это поле было видимым для пользователей.

dev save

Мы переопределяем метод save(), сохраняя параметры, необходимые 
для ModelForm. Этот код выглядит следующим образом:

Мы создаем новый экземпляр image, вызвав метод save() формы с 
commit=False.
Мы получим URL-адрес из cleaned_data словаря формы.
Имя изображения создается путем объединения служебного заголовка 
изображения с исходным расширением файла.
Мы используем модуль Python urllib для загрузки изображения, 
а затем вызываем метод save() поля image, передав ему объект ContentFile, который создается с помощью загружаемого содержимого файла. Таким образом мы сохраняем файл в каталог мультимедиа нашего проекта. Мы также перейдем к параметру save=False, чтобы избежать сохранения объекта в базе данных.

Чтобы сохранить то же поведение, что и метод save(), который 
мы переопределяем, мы сохраняем форму в базу данных только в том 
случае, если параметр commit True.

Теперь нам нужен view для обработки формы. Отредактируйте файл 
views.py приложения images